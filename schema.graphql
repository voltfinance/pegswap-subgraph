type PegSwap @entity {
  id: ID!
  tokens: [Token!]!
 
}

type Token @entity {
  id: ID!
  symbol: String!
  name: String!
  decimals: Int!
  balance: BigDecimal!
  dayData: [TokenDayData!]! @derivedFrom(field: "token")
}

type User @entity {
  id: ID!
  totalSourceAmountSwapped: BigInt!
  totalTargetAmountSwapped: BigInt!
}

type Swap @entity {
  id: ID!
  caller: Bytes!
  sourceAmount: BigInt!
  targetAmount: BigInt!
  sourceToken: Token!
  targetToken: Token!
}

type TokenDayData @entity {
  id: ID!
  token:Token!
  sourceAmount: BigDecimal!
  targetAmount: BigDecimal!
  volume:BigDecimal!
  blockNumber:BigInt!
  balance: BigDecimal!
  balanceUSD: BigDecimal!
  volumeUSD:BigDecimal!
  timestamp:BigInt!
  reserve0:BigDecimal!
  reserve1:BigDecimal!

}
